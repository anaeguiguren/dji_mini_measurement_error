?poly
ggplot(dat, aes(x = true.altitude, y = altitude.err, col = as.factor(FlightNo)))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")
ggplot(dat, aes(x = true.altitude, y = altitude.err, col = as.factor(FlightNo)))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth()
ggplot(dat, aes(x = true.altitude, y = altitude.err, col = as.factor(FlightNo)))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")
ggplot(dat, aes(x = true.altitude, y = altitude.err))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")
ggplot(dat, aes(x = true.altitude, y = altitude.err))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "loess")
ggplot(dat, aes(x = true.altitude^2, y = altitude.err))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "loess")
ggplot(dat, aes(x = true.altitude, y = log(altitude.err)))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "loess")
ggplot(dat, aes(x = true.altitude, y = altitude.err, col = as.factor(FlightNo)))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")
ggplot(dat, aes(x = true.altitude, y = altitude.err, col = as.factor(FlightNo)))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")
ggplot(dat, aes(x = true.altitude, y = altitude.err)+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")
ggplot(dat, aes(x = true.altitude, y = altitude.err))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")
ggplot(dat, aes(x = true.altitude, y = altitude.err))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "loess")
ggplot(dat, aes(x = true.altitude, y = alltitude.error.p))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "loess")
ggplot(dat, aes(x = true.altitude, y = alltitude.err.p))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "loess")
ggplot(dat, aes(x = true.altitude, y = alltitude.err.p))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "loess")
ggplot(dat, aes(x = true.altitude, y = altitude.err.p))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "loess")
ggplot(dat, aes(x = true.altitude, y = altitude.err.p))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "loess")
ggplot(dat, aes(x = true.altitude, y = altitude.err.p))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")
ggplot(dat, aes(x = true.altitude, y = altitude.err))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")
?quantile
quantiles(dat$altitude.err.p, probs = c(0.05, 0.95))
quantile(dat$altitude.err.p, probs = c(0.05, 0.95))
mean(dat$altitude.err.p)
dat$bal.length<- morpho.length.alpha(altitude = dat$altitude.fix*(1+mean(dat$altitude.err.p)),
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
dat$bal.length<- morpho.length.alpha(altitude = dat$altitude.fix*(1+mean(dat$altitude.err.p)),
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
dat$bal.length<- morpho.length.alpha(altitude = dat$altitude.fix*(1+mean(dat$altitude.err.p)),
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
dat$altitude.err*(1+mean(dat$altitude.err.p))
plot(dat$true.altitude, dat$altitude.fix*(1+mean(dat$altitude.err.p)))
abline(a=0, b = 1)
dat$altitude.corr <-dat$altitude.fix*(1+mean(dat$altitude.err.p))
dat$bal.length.c<- morpho.length.alpha(altitude =altitude.corr,
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
dat$altitude.corr <-dat$altitude.fix*(1+mean(dat$altitude.err.p))
dat$bal.length.c<- morpho.length.alpha(altitude =dat$altitude.corr,
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
dat$imageWidth
dat$altitude.corr <-dat$altitude.fix*(1+mean(dat$altitude.err.p))
dat$bal.length.c<- morpho.length.alpha(altitude =dat$altitude.corr,
image.width = dat$ImageWidth,
length.pixels = dat$pixel.length)
summary(dat$bal.length.c)
summary(dat$bal.length.c)
hist(dat$bal.length.c, breaks = 30)
hist(dat$bal.length.c, breaks = 30, main = "", xlab = "estimated length")
hist(dat$bal.length, breaks = 20, xlab = "estimated length of Balaena (m)", main = "")
abline(v = 12.03, col = 2)
hist(dat$bal.length, breaks = 20, xlab = "estimated length of Balaena (m)", main = "")
abline(v = 12.03, col = 2, lwd = 2)
hist(dat$bal.length.c, breaks = 30, main = "", xlab = "estimated length")
abline(v = 12.03, col = 2, lwd = 2)
dat$altitude.corr <-dat$altitude.fix*(1+mean(dat$altitude.err.p))
dat$bal.length.c<- morpho.length.alpha(altitude =dat$altitude.corr,
image.width = dat$ImageWidth,
length.pixels = dat$pixel.length)
quantile(dat$bal.length.c, probs = c(0.05, 0.5, 0.95))
12.71-12.03
(12.71-12.03)/12.03
(11.17-12.03)/12.03
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
plot(dat$true.altitude, dat$length.error.c)
plot(dat$altitude.fix, dat$length.error.c)
plot(dat$altitude.fix, dat$length.error.c/dat$length.fix)
plot(dat$altitude.fix, dat$length.error.c/12.03)
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
head(flight)
head(dat)
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
ggplot(dat, aes(FlightNo, length.error.c.p))+
geom_boxplot()
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
ggplot(dat, aes(length.error.c.p))+
geom_boxplot()
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
ggplot(dat, aes(y=length.error.c.p))+
geom_boxplot()
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
ggplot(dat)+
geom_boxplot(aes(y = length.error.c.p))+
scale_x_discrete()+
labs(y = "corrected % error in Balaena's estimated length")
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
ggplot(dat)+
geom_boxplot(aes(y = length.error.c.p))+
#scale_x_discrete()+
labs(y = "corrected % error in Balaena's estimated length")
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
ggplot(dat)+
geom_boxplot(aes(y = length.error.c.p))+
scale_x_discrete()+
labs(y = "corrected % error")
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
ggplot(dat)+
geom_boxplot(aes(y = length.error.c.p))+
scale_x_discrete()+
labs(y = "corrected % error")+
geom_hline(yintercept = 0)
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
ggplot(dat)+
geom_boxplot(aes(y = length.error.c.p))+
scale_x_discrete()+
labs(y = "corrected % error")+
geom_hline(yintercept = 0)+
geom_hline(yintercetp = -5, linetype = "dashed")+
geom_hline(yintercetp = 5, linetype = "dashed")
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
ggplot(dat)+
geom_boxplot(aes(y = length.error.c.p))+
scale_x_discrete()+
labs(y = "corrected % error")+
geom_hline(yintercept = 0)+
geom_hline(yintercetp = -5, linetype = "dashed")
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
ggplot(dat)+
geom_boxplot(aes(y = length.error.c.p))+
scale_x_discrete()+
labs(y = "corrected % error")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
d <- cbind(corrected = dat$length.error.c.p,
uncorrected =dat$length.error/dat$length.fix)
dat$length.error.p <- (dat$length.error/dat$length.fix)*100
d <- cbind(corrected = dat$length.error.c.p,
uncorrected =dat$length.error.p)
d <- c(dat$length.error.c.p,dat$length.error.p)
str(d)
e <- c(dat$length.error.c.p,dat$length.error.p)
d < data.frame(perc.error = e, error.type = rep(c("corrected", "uncorrected"), each = length(dat$length)))
rep(c("corrected", "uncorrected"), each = length(dat$length))
rep(c("corrected", "uncorrected"), each = length(dat$length))
d <- data.frame(perc.error = e, error.type = rep(c("corrected", "uncorrected"), each = length(dat$length)))
View(d)
head(d)
ggplot(d, aes(x = error.type, y = perc.error))+
geom_boxplot()+
scale_x_discrete()+
labs(y = "corrected % error")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_x_discrete()+
labs(y = "corrected % error")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_x_discrete()+
labs(y = "corrected % error")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")+
ylim(-60,60)
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_x_discrete()+
ylim(-60,60)+
labs(y = "corrected % error")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_x_discrete()+
ylim(-60,60)+
labs(y = "corrected % error", x = "error type")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_x_discrete()+
ylim(-60,60)+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
ylim(-60,60)+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
ylim(-60,60)+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")+
scale_y_continuous(breaks = seq(-60,60,10))
seq(-60,60,10)
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(breaks = seq(-60,60,10))
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(limits(c(-60,60)), breaks = seq(-60,60,10))
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-60,60), breaks = seq(-60,60,10))
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-60,60), breaks = seq(-60,60,10))+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-60,60), breaks = seq(-60,60,10))+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-60,60), breaks = seq(-60,60,10))+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-60,60), breaks = seq(-60,60,10))+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
true.altitude <- function(true.length, pixel.length, image.width, alpha){
true.altitude = (true.length/pixel.length) * (image.width/alpha)
}
dat$true.altitude <- true.altitude(true.length = 12.03,
pixel.length = dat$pixel.length,
image.width = dat$ImageWidth,
alpha = 1.2646)
true.altitude <- function(true.length, pixel.length, image.width, alpha){
true.altitude = (true.length/pixel.length) * (image.width/alpha)
}
dat$true.altitude <- true.altitude(true.length = 12.03,
pixel.length = dat$pixel.length,
image.width = dat$ImageWidth,
alpha = 1.2646)
dat$altitude.err <- dat$true.altitude - dat$altitude.fix
dat$altitude.err.p <- dat$altitude.err/dat$true.altitude
true.altitude <- function(true.length, pixel.length, image.width, alpha){
t.a = (true.length/pixel.length) * (image.width/alpha)
}
dat$true.altitude <- true.altitude(true.length = 12.03,
pixel.length = dat$pixel.length,
image.width = dat$ImageWidth,
alpha = 1.2646)
true.altitude <- function(true.length, pixel.length, image.width, alpha){
t.a = (true.length/pixel.length) * (image.width/alpha)
}
dat$true.altitude <- true.altitude(true.length = 12.03,
pixel.length = dat$pixel.length,
image.width = dat$ImageWidth,
alpha = 1.2646)
true.altitude <- function(true.length, pixel.length, image.width, alpha){
t.a = (true.length/pixel.length) * (image.width/alpha)
}
dat$true.altitude <- true.altitude(true.length = 12.03,
pixel.length = dat$pixel.length,
image.width = dat$ImageWidth,
alpha = 1.2646)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/anacristinaeguigurenburneo/Documents/DJI_Mini2_Measurement_Error/")
source("Scripts/Gal23_DroneMeasurementError_DataPrep.R")
library(ggplot2)
px.length <- function(l.m, p.d, f.l = 4.25531, a.m){
(l.m/p.d)*(f.l/a.m)
}
#calculate pixel length:
dat$pixel.length <- px.length(l.m=dat$length,
p.d = dat$pixelDimension.old,
a.m = dat$altitude)
# fix pixel dimensions:
dat$pixelDimension<-NA
dat$pixelDimension <- 6.3/dat$ImageWidth
dat<- dat %>% select(Date, FlightNo, imageName, timeStamp, altitudeRaw = altitude, imageWidth = ImageWidth, pixel.length, position = pos)
head(dat)
#recalculate Balaena's length in m, with new altitude
boat.height = 1.03- 0.24# balaena's altitude over the water - toe rail
launch.chest = 1.4 # Mateo's chest height
camera.height = 0.045 # cameras distance above the base of the drone's legsfrom legs
dat$altitude.fix <- dat$altitude + launch.chest + camera.height
head(dat)
morpho.length.alpha <- function(alpha = 1.2646,image.width, altitude, length.pixels){
length = (alpha/image.width) * altitude * length.pixels
}
dat$bal.length<- morpho.length.alpha(altitude = dat$altitude.fix,
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
summary(dat$bal.length)
hist(dat$bal.length, breaks = 20, xlab = "estimated length of Balaena (m)", main = "")
abline(v = 12.03, col = 2, lwd = 2)
dat$error <- 12.03- dat$bal.length
mean(dat$error)
sd(dat$error)
true.altitude <- function(true.length, pixel.length, image.width, alpha){
t.a = (true.length/pixel.length) * (image.width/alpha)
}
dat$true.altitude <- true.altitude(true.length = 12.03,
pixel.length = dat$pixel.length,
image.width = dat$ImageWidth,
alpha = 1.2646)
true.altitude <- function(true.length, pixel.length, image.width, alpha){
t.a = (true.length/pixel.length) * (image.width/alpha)
}
dat$true.altitude <- true.altitude(true.length = 12.03,
pixel.length = dat$pixel.length,
image.width = dat$imageWidth,
alpha = 1.2646)
dat$altitude.err <- dat$true.altitude - dat$altitude.fix
dat$altitude.err.p <- dat$altitude.err/dat$true.altitude
hist(dat$altitude.err, breaks = 30, xlab = "altitude error (m)",
main = "")
text(x = 20, y = 80, paste("mean error = ",signif(mean(dat$altitude.err), digits =3)))
text(x = 20, y = 60, paste("s.d. = ",signif(sd(dat$altitude.err), digits =3)))
ggplot(dat, aes(x = true.altitude, y = altitude.err))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")+
ggplot(dat, aes(x = true.altitude, y = altitude.err))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")
ggplot(dat, aes(x = true.altitude, y = altitude.err.p))+
geom_point(alpha = 0.5)+
theme(legend.position = "none")+
geom_smooth(method = "lm")
mean(dat$altitude.err.p)
quantile(dat$altitude.err.p, probs = c(0.05, 0.95))
dat$altitude.corr <-dat$altitude.fix*(1+mean(dat$altitude.err.p))
dat$bal.length.c<- morpho.length.alpha(altitude =dat$altitude.corr,
image.width = dat$ImageWidth,
length.pixels = dat$pixel.length)
dat$altitude.corr <-dat$altitude.fix*(1+mean(dat$altitude.err.p))
dat$bal.length.c<- morpho.length.alpha(altitude =dat$altitude.corr,
image.width = dat$imageWidth,
length.pixels = dat$pixel.length)
quantile(dat$bal.length.c, probs = c(0.05, 0.5, 0.95))
hist(dat$bal.length.c, breaks = 30, main = "", xlab = "estimated length")
abline(v = 12.03, col = 2, lwd = 2)
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
dat$length.error.p <- (dat$length.error/dat$length.fix)*100
dat$bal.length
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
dat$length.error.p <- (dat$length.error/dat$bal.length)*100
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
dat$length.error.p <- (dat$error/dat$bal.length)*100
e <- c(dat$length.error.c.p,dat$length.error.p)
d <- data.frame(perc.error = e, error.type = rep(c("corrected", "uncorrected"), each = length(dat$length)))
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
dat$length.error.p <- (dat$error/dat$bal.length)*100
e <- c(dat$length.error.c.p,dat$length.error.p)
dat$length.error.c <- dat$bal.length.c - 12.03 # corrected error raw
dat$length.error.c.p <- (dat$length.error.c/dat$bal.length.c)*100
dat$length.error.p <- (dat$error/dat$bal.length)*100
e <- c(dat$length.error.c.p,dat$length.error.p)
d <- data.frame(perc.error = e, error.type = rep(c("corrected", "uncorrected"), each = length(dat$bal.length)))
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-60,60), breaks = seq(-60,60,10))+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-60,60), breaks = seq(-60,60,10))+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-60,60), breaks = seq(-60,60,10))+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-60,60), breaks = seq(-60,60,10))+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-60,60), breaks = seq(-60,60,10))+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
ggplot(d, aes(x = error.type, y = perc.error, color = error.type))+
geom_boxplot()+
scale_y_continuous(limits=c(-60,60), breaks = seq(-60,60,10))+
labs(y = "corrected % error", x = "error type")+
theme(legend.position = "null")+
geom_hline(yintercept = 0)+
geom_hline(yintercept = -5, linetype = "dashed")+
geom_hline(yintercept = 5, linetype = "dashed")
dat$error <- dat$bal.length-12.03
mean(dat$error)
sd(dat$error)
